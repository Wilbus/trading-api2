include "schwab_optionsenums.fbs";

namespace schwabMarketData;

table Underlying
{
    ask: double;
    askSize: int;
    bid: double;
    bidSize: int;
    change: double;
    close: double;
    delayed: bool;
    description: string;
    exchangeName: ExchangeName;
    fiftyTwoWeekHigh: double;
    fiftyTwoWeekLow: double;
    highPrice: double;
    last: double;
    lowPrice: double;
    mark: double;
    markChange: double;
    markPercentChange: double;
    openPrice: double;
    percentChange: double;
    quoteTime: int64;
    symbol: string;
    totalVolume: int64;
    tradeTime: int64;
}

table OptionDeliverables
{
    symbol: string;
    assetType: string;
    deliverableUnits: string;
    currencyType: string;
}

table OptionContract
{
    putCall: PutCall;
    symbol: string;
    description: string;
    exchangeName: string;
    bidPrice: double;
    askPrice: double;
    lastPrice: double;
    markPrice: double;
    bidSize: int32;
    askSize: int32;
    lastSize: int32;
    highPrice: double;
    lowPrice: double;
    openPrice: double;
    closePrice: double;
    totalVolume: int32;
    tradeDate: int32;
    quoteTimeInLong: int32;
    tradeTimeInLong: int32;
    netChange: double;
    volatility: double;
    delta: double;
    gamma: double;
    theta: double;
    vega: double;
    rho: double;
    timeValue: double;
    openInterest: double;
    isInTheMoney: bool;
    theoreticalOptionValue: double;
    theoreticalVolatility: double;
    isMini: bool;
    isNonStandard: bool;
    optionDeliverablesList: [OptionDeliverables];
    strikePrice: double;
    expirationDate: string;
    daysToExpiration: int32;
    expirationType: ExpirationType;
    lastTradingDay: int64;
    multiplier: double;
    settlementType: SettlementType;
    deliverableNote: string;
    isIndexOption: bool;
    percentChange: double;
    markChange: double;
    markPercentChange: double;
    isPennyPilot: bool;
    intrinsicValue: double;
    optionRoot: string;
}

table OptionContractMap
{
    
}

table OptionChain
{
    symbol: string;
    status: string;
    underlying: Underlying;
    strategy: OptionStrategy;
    interval: double;
    isDelayed: bool;
    isIndex: bool;
    daysToExpiration: double;
    interestRate: double;
    underlyingPrice: double;
    volatility: double;
    callExpDateMap: OptionContract;
    putExpDateMap: OptionContract;
}

root_type OptionChain;